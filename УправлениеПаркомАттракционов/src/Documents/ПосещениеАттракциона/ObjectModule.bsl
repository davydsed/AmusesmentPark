#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций
Процедура ОбработкаПроведения(Отказ,Режим)
	// регистр АктивныеПосещения
	
	Движения.АктивныеПосещения.Записывать = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток,
	|	АктивныеПосещенияОстатки.ВидАттракциона
	|ИЗ
	|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки";
	
	Запрос.УстановитьПараметр("Основание", Основание );
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОсталосьПосещений = 0 ;
	ВидАттракционаАбонемента = Неопределено ;
	
	Если Выборка.Следующий() Тогда
		ОсталосьПосещений = Выборка.КоличествоПосещенийОстаток;
		ВидАттракционаДокумента = Выборка.ВидАттракциона;
	КонецЕсли;
	 
	 Если ОсталосьПосещений < 1 Тогда
	 	Отказ = Истина;
	 	Сообщение = Новый СообщениеПользователю;
	 	Сообщение.Текст = "В билете не осталось посещений";
	 	Сообщение.УстановитьДанные(ЭтотОбъект);
	 	Сообщение.Поле = "Основание";
	 	Сообщение.Сообщить(); 
	 КонецЕсли;
	 
	 ВидАттракционаАбонемента = ВидАттракциона(Аттракцион);
	 
	 Если ЗначениеЗаполнено(ВидАттракционаАбонемента) 
	 И ВидАттракционаДокумента <> ВидАттракционаАбонемента Тогда
	 	Отказ = Истина;
	 	Сообщение = Новый СообщениеПользователю;
	 	Сообщение.Текст = "Билет не подходит для посещения этого аттракциона";
	 	Сообщение.УстановитьДанные(ЭтотОбъект);
	 	Сообщение.Поле = "Основание";
	 	Сообщение.Сообщить(); 
	 КонецЕсли; 
	 
	 Если Отказ Тогда
	 	Возврат; 
	 КонецЕсли;
	
	
	Движения.АктивныеПосещения.Записывать = Истина;
	Движение = Движения.АктивныеПосещения.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Основание = Основание;
	Движение.ВидАттракциона = ВидАттракционаАбонемента;
	Движение.КоличествоПосещений =  1;
	
	Движения.Записать();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидАттракциона(Аттракцион)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Атракционы.ВидыАттракционов Как ВидАттракциона
	|ИЗ
	|	Справочник.Атракционы КАК Атракционы
	|ГДЕ
	|	Атракционы.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Аттракцион);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ВидАттракциона;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
